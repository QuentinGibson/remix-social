generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(cuid())
  email     String    @unique
  name      String    @unique
  avatar    String    @default("https://res.cloudinary.com/demo/image/upload/c_thumb,g_auto:classic,h_175,w_175/v1551428220/veducate/spencer-backman-482079-unsplash.jpg")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  password  Password?
  posts     Post[]
  seens     Seen[]
  likes     Like[]
  comments  Comment[]
  settings  UserSettings?

}

model Password {
  hash   String
  userId String @unique
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Post {
  id        String @id @default(cuid())
  title     String
  image     String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  user      User   @relation(fields: [userId],  references: [id], onDelete: Cascade)
  userId    String
  seens     Seen[]
  likes     Like[]
  comments  Comment[]
}

model Seen {
  id        String @id @default(cuid())
  createdAt DateTime  @default(now())
  user      User @relation(fields: [userId], references: [id])
  post      Post @relation(fields: [postId], references: [id])
  userId    String
  postId    String

  @@unique([userId, postId])
}

model Comment {
  id      String @id @default(cuid())
  createdAt DateTime  @default(now())
  user    User @relation(fields: [userId], references: [id])
  post    Post @relation(fields: [postId], references: [id])
  body    String
  userId  String
  postId  String
  @@unique([userId, postId])
}

model Like {
  id      String @id @default(cuid())
  createdAt DateTime  @default(now())
  user User @relation(fields: [userId], references: [id])
  post Post @relation(fields: [postId], references: [id])
  userId String
  postId String
  @@unique([userId, postId])
}

model UserSettings {
  id           String @id @default(cuid())
  theme        String?
  language     String?
  layout       String?
  notifications Boolean?
  privacy      String?
  accessibility String?
  user         User   @relation(fields: [userId], references: [id])
  userId       String @unique
}
